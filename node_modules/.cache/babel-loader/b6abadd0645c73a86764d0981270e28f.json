{"remainingRequest":"/Users/x/GolandProjects/giligili-vue/node_modules/babel-loader/lib/index.js!/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/x/GolandProjects/giligili-vue/src/views/PostVideo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/x/GolandProjects/giligili-vue/src/views/PostVideo.vue","mtime":1636536315123},{"path":"/Users/x/GolandProjects/giligili-vue/babel.config.js","mtime":1636518206713},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js","mtime":1636518052017},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/babel-loader/lib/index.js","mtime":1636518053895},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js","mtime":1636518052017},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/index.js","mtime":1636518053861}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAqIGFzIEFQSSBmcm9tICdAL2FwaS92aWRlby8nOwppbXBvcnQgdXBscGFkQVBJIGZyb20gJ0AvYXBpL3VwbG9hZC8nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Bvc3RWaWRlbycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGltYWdlVXJsOiAnJywKICAgICAgZGlhbG9nSW1hZ2VVcmw6ICcnLAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgZm9ybTogewogICAgICAgIHRpdGxlOiAnJywKICAgICAgICBpbmZvOiAnJywKICAgICAgICB1cmw6ICcnLAogICAgICAgIGF2YXRhcjogJycKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZuQmVmb3JlVXBsb2FkOiBmdW5jdGlvbiBmbkJlZm9yZVVwbG9hZChmaWxlKSB7CiAgICAgIHZhciBpc0ltYWdlID0gZmlsZS50eXBlID09PSAnaW1hZ2UvcG5nJyB8fCBmaWxlLnR5cGUgPT09ICdpbWFnZS9qcGVnJzsKICAgICAgdmFyIGlzTHQyTSA9IGZpbGUuc2l6ZSAvIDEwMjQgLyAxMDI0IDwgMjsKCiAgICAgIGlmICghaXNJbWFnZSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+S4iuS8oOWktOWDj+WbvueJh+WPquiDveaYr+WbvueJhyEnKTsKICAgICAgfQoKICAgICAgaWYgKCFpc0x0Mk0pIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlpLTlg4/lm77niYflpKflsI/kuI3og73otoXov4cgMk1CIScpOwogICAgICB9CgogICAgICByZXR1cm4gaXNJbWFnZSAmJiBpc0x0Mk07CiAgICB9LAogICAgZm5VcGxvYWRSZXF1ZXN0OiBmdW5jdGlvbiBmblVwbG9hZFJlcXVlc3Qob3B0aW9uKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB1cGxwYWRBUEkob3B0aW9uLmZpbGUubmFtZSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIG9SZXEgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgICBvUmVxLm9wZW4oJ1BVVCcsIHJlcy5kYXRhLnB1dCwgdHJ1ZSk7CiAgICAgICAgb1JlcS5zZW5kKG9wdGlvbi5maWxlKTsKCiAgICAgICAgb1JlcS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpcy5pbWFnZVVybCA9IHJlcy5kYXRhLmdldDsKICAgICAgICAgIF90aGlzLmZvcm0uYXZhdGFyID0gcmVzLmRhdGEua2V5OwogICAgICAgIH07CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIF90aGlzLiRub3RpZnkuZXJyb3IoewogICAgICAgICAgdGl0bGU6ICfnvZHot6/plJnor6/vvIzmiJbogIXmnI3liqHlmajlrpXmnLonLAogICAgICAgICAgbWVzc2FnZTogZXJyb3IKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIEFQSS5wb3N0VmlkZW8odGhpcy5mb3JtKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLnN0YXR1cyA+IDApIHsKICAgICAgICAgIF90aGlzMi4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgICAgdGl0bGU6ICfmipXnqL/lpLHotKUnLAogICAgICAgICAgICBtZXNzYWdlOiByZXMubXNnCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogJ+aKleeov+aIkOWKnycsCiAgICAgICAgICAgIG1lc3NhZ2U6ICJcdTYwQThcdTYyOTVcdTdBM0ZcdTc2ODRJRFx1NEUzQSIuY29uY2F0KHJlcy5kYXRhLmlkKSwKICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIF90aGlzMi4kbm90aWZ5LmVycm9yKHsKICAgICAgICAgIHRpdGxlOiAn572R6Lev6ZSZ6K+v77yM5oiW6ICF5pyN5Yqh5Zmo5a6V5py6JywKICAgICAgICAgIG1lc3NhZ2U6IGVycm9yCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcG9uZW50czoge30KfTs="},{"version":3,"sources":["/Users/x/GolandProjects/giligili-vue/src/views/PostVideo.vue"],"names":[],"mappings":";AAwCA,OAAO,KAAK,GAAZ,MAAqB,cAArB;AACA,OAAO,SAAP,MAAsB,eAAtB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,QAAQ,EAAE,EADL;AAEL,MAAA,cAAc,EAAE,EAFX;AAGL,MAAA,aAAa,EAAE,KAHV;AAIL,MAAA,IAAI,EAAE;AACJ,QAAA,KAAK,EAAE,EADH;AAEJ,QAAA,IAAI,EAAE,EAFF;AAGJ,QAAA,GAAG,EAAE,EAHD;AAIJ,QAAA,MAAM,EAAE;AAJJ;AAJD,KAAP;AAWD,GAdY;AAeb,EAAA,OAAO,EAAE;AACP,IAAA,cADO,0BACQ,IADR,EACc;AACnB,UAAM,OAAM,GAAK,IAAI,CAAC,IAAL,KAAc,WAAd,IAA6B,IAAI,CAAC,IAAL,KAAc,YAA5D;AACA,UAAM,MAAK,GAAI,IAAI,CAAC,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,UAAI,CAAC,OAAL,EAAc;AACZ,aAAK,QAAL,CAAc,KAAd,CAAoB,cAApB;AACF;;AACA,UAAI,CAAC,MAAL,EAAa;AACX,aAAK,QAAL,CAAc,KAAd,CAAoB,mBAApB;AACF;;AACA,aAAO,OAAM,IAAK,MAAlB;AACD,KAXM;AAYP,IAAA,eAZO,2BAYS,MAZT,EAYiB;AAAA;;AACtB,MAAA,SAAS,CAAC,MAAM,CAAC,IAAP,CAAY,IAAb,CAAT,CAA4B,IAA5B,CAAiC,UAAC,GAAD,EAAS;AACxC,YAAM,IAAG,GAAI,IAAI,cAAJ,EAAb;AACA,QAAA,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,GAAG,CAAC,IAAJ,CAAS,GAA1B,EAA+B,IAA/B;AACA,QAAA,IAAI,CAAC,IAAL,CAAU,MAAM,CAAC,IAAjB;;AACA,QAAA,IAAI,CAAC,MAAL,GAAc,YAAM;AAClB,UAAA,KAAI,CAAC,QAAL,GAAgB,GAAG,CAAC,IAAJ,CAAS,GAAzB;AACA,UAAA,KAAI,CAAC,IAAL,CAAU,MAAV,GAAmB,GAAG,CAAC,IAAJ,CAAS,GAA5B;AACD,SAHD;AAID,OARD,EAQG,KARH,CAQS,UAAC,KAAD,EAAW;AAClB,QAAA,KAAI,CAAC,OAAL,CAAa,KAAb,CAAmB;AACjB,UAAA,KAAK,EAAE,cADU;AAEjB,UAAA,OAAO,EAAE;AAFQ,SAAnB;AAID,OAbD;AAcD,KA3BM;AA4BP,IAAA,QA5BO,sBA4BI;AAAA;;AACT,MAAA,GAAG,CAAC,SAAJ,CAAc,KAAK,IAAnB,EAAyB,IAAzB,CAA8B,UAAC,GAAD,EAAS;AACrC,YAAI,GAAG,CAAC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,UAAA,MAAI,CAAC,OAAL,CAAa,KAAb,CAAmB;AACjB,YAAA,KAAK,EAAE,MADU;AAEjB,YAAA,OAAO,EAAE,GAAG,CAAC;AAFI,WAAnB;AAIF,SALA,MAKO;AACL,UAAA,MAAI,CAAC,OAAL,CAAa;AACX,YAAA,KAAK,EAAE,MADI;AAEX,YAAA,OAAO,4CAAY,GAAG,CAAC,IAAJ,CAAS,EAArB,CAFI;AAGX,YAAA,IAAI,EAAE;AAHK,WAAb;AAKF;AACD,OAbD,EAaG,KAbH,CAaS,UAAC,KAAD,EAAW;AAClB,QAAA,MAAI,CAAC,OAAL,CAAa,KAAb,CAAmB;AACjB,UAAA,KAAK,EAAE,cADU;AAEjB,UAAA,OAAO,EAAE;AAFQ,SAAnB;AAID,OAlBD;AAmBD;AAhDM,GAfI;AAiEb,EAAA,UAAU,EAAE;AAjEC,CAAf","sourcesContent":["<template>\n  <div class=\"post-video\">\n    <h2>欢迎投稿：</h2>\n    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n      <el-form-item label=\"标题\">\n        <el-input v-model=\"form.title\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"视频地址\">\n        <el-input type=\"url\" v-model=\"form.url\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"描述\">\n        <el-input type=\"textarea\" v-model=\"form.info\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"视频封面\">\n        <el-upload\n          class=\"avatar-uploader\"\n          label=\"描述\"\n          action=\"\"\n          ref=\"upload\"\n          :before-upload=\"fnBeforeUpload\"\n          :http-request=\"fnUploadRequest\"\n          :show-file-list=\"false\">\n          <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          <div class=\"el-upload__tip\" v_slot=\"tip\">只能上传png文件，且不超过500kb</div>\n        </el-upload>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onSubmit\">立即创建</el-button>\n      </el-form-item>\n\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport * as API from '@/api/video/';\nimport uplpadAPI from '@/api/upload/';\n\nexport default {\n  name: 'PostVideo',\n  data() {\n    return {\n      imageUrl: '',\n      dialogImageUrl: '',\n      dialogVisible: false,\n      form: {\n        title: '',\n        info: '',\n        url: '',\n        avatar: '',\n      },\n    };\n  },\n  methods: {\n    fnBeforeUpload(file) {\n      const isImage = (file.type === 'image/png' || file.type === 'image/jpeg');\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        this.$message.error('上传头像图片只能是图片!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isImage && isLt2M;\n    },\n    fnUploadRequest(option) {\n      uplpadAPI(option.file.name).then((res) => {\n        const oReq = new XMLHttpRequest();\n        oReq.open('PUT', res.data.put, true);\n        oReq.send(option.file);\n        oReq.onload = () => {\n          this.imageUrl = res.data.get;\n          this.form.avatar = res.data.key;\n        };\n      }).catch((error) => {\n        this.$notify.error({\n          title: '网路错误，或者服务器宕机',\n          message: error,\n        });\n      });\n    },\n    onSubmit() {\n      API.postVideo(this.form).then((res) => {\n        if (res.status > 0) {\n          this.$notify.error({\n            title: '投稿失败',\n            message: res.msg,\n          });\n        } else {\n          this.$notify({\n            title: '投稿成功',\n            message: `您投稿的ID为${res.data.id}`,\n            type: 'success',\n          });\n        }\n      }).catch((error) => {\n        this.$notify.error({\n          title: '网路错误，或者服务器宕机',\n          message: error,\n        });\n      });\n    },\n  },\n  components: {\n  },\n};\n</script>\n\n<style>\n  .avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n  }\n  .avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n  }\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n  }\n  .avatar {\n    max-width: 178px;\n    max-height: 178px;\n    display: block;\n  }\n</style>\n"],"sourceRoot":""}]}