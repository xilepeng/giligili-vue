{"remainingRequest":"/Users/x/GolandProjects/giligili-vue/node_modules/babel-loader/lib/index.js!/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/x/GolandProjects/giligili-vue/src/views/PostVideo.vue?vue&type=template&id=56a96171","dependencies":[{"path":"/Users/x/GolandProjects/giligili-vue/src/views/PostVideo.vue","mtime":1636536315123},{"path":"/Users/x/GolandProjects/giligili-vue/babel.config.js","mtime":1636518206713},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js","mtime":1636518052017},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/babel-loader/lib/index.js","mtime":1636518053895},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1636518055301},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js","mtime":1636518052017},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/index.js","mtime":1636518053861}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInBvc3QtdmlkZW8iCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMiIsIG51bGwsICLmrKLov47mipXnqL/vvJoiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IFsic3JjIl07CnZhciBfaG9pc3RlZF80ID0gewogIGtleTogMSwKICBjbGFzczogImVsLWljb24tcGx1cyBhdmF0YXItdXBsb2FkZXItaWNvbiIKfTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBjbGFzczogImVsLXVwbG9hZF9fdGlwIiwKICB2X3Nsb3Q6ICJ0aXAiCn0sICLlj6rog73kuIrkvKBwbmfmlofku7bvvIzkuJTkuI3otoXov4c1MDBrYiIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIueri+WNs+WIm+W7uiIpOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9lbF9pbnB1dCA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbC1pbnB1dCIpOwoKICB2YXIgX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0gPSBfcmVzb2x2ZUNvbXBvbmVudCgiZWwtZm9ybS1pdGVtIik7CgogIHZhciBfY29tcG9uZW50X2VsX3VwbG9hZCA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbC11cGxvYWQiKTsKCiAgdmFyIF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoImVsLWJ1dHRvbiIpOwoKICB2YXIgX2NvbXBvbmVudF9lbF9mb3JtID0gX3Jlc29sdmVDb21wb25lbnQoImVsLWZvcm0iKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm0sIHsKICAgIHJlZjogImZvcm0iLAogICAgbW9kZWw6ICRkYXRhLmZvcm0sCiAgICAibGFiZWwtd2lkdGgiOiAiODBweCIKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfZm9ybV9pdGVtLCB7CiAgICAgICAgbGFiZWw6ICLmoIfpopgiCiAgICAgIH0sIHsKICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2lucHV0LCB7CiAgICAgICAgICAgIG1vZGVsVmFsdWU6ICRkYXRhLmZvcm0udGl0bGUsCiAgICAgICAgICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgcmV0dXJuICRkYXRhLmZvcm0udGl0bGUgPSAkZXZlbnQ7CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9LCBudWxsLCA4CiAgICAgICAgICAvKiBQUk9QUyAqLwogICAgICAgICAgLCBbIm1vZGVsVmFsdWUiXSldOwogICAgICAgIH0pLAogICAgICAgIF86IDEKICAgICAgICAvKiBTVEFCTEUgKi8KCiAgICAgIH0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIHsKICAgICAgICBsYWJlbDogIuinhumikeWcsOWdgCIKICAgICAgfSwgewogICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfaW5wdXQsIHsKICAgICAgICAgICAgdHlwZTogInVybCIsCiAgICAgICAgICAgIG1vZGVsVmFsdWU6ICRkYXRhLmZvcm0udXJsLAogICAgICAgICAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgIHJldHVybiAkZGF0YS5mb3JtLnVybCA9ICRldmVudDsKICAgICAgICAgICAgfSkKICAgICAgICAgIH0sIG51bGwsIDgKICAgICAgICAgIC8qIFBST1BTICovCiAgICAgICAgICAsIFsibW9kZWxWYWx1ZSJdKV07CiAgICAgICAgfSksCiAgICAgICAgXzogMQogICAgICAgIC8qIFNUQUJMRSAqLwoKICAgICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgewogICAgICAgIGxhYmVsOiAi5o+P6L+wIgogICAgICB9LCB7CiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9pbnB1dCwgewogICAgICAgICAgICB0eXBlOiAidGV4dGFyZWEiLAogICAgICAgICAgICBtb2RlbFZhbHVlOiAkZGF0YS5mb3JtLmluZm8sCiAgICAgICAgICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgcmV0dXJuICRkYXRhLmZvcm0uaW5mbyA9ICRldmVudDsKICAgICAgICAgICAgfSkKICAgICAgICAgIH0sIG51bGwsIDgKICAgICAgICAgIC8qIFBST1BTICovCiAgICAgICAgICAsIFsibW9kZWxWYWx1ZSJdKV07CiAgICAgICAgfSksCiAgICAgICAgXzogMQogICAgICAgIC8qIFNUQUJMRSAqLwoKICAgICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2Zvcm1faXRlbSwgewogICAgICAgIGxhYmVsOiAi6KeG6aKR5bCB6Z2iIgogICAgICB9LCB7CiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF91cGxvYWQsIHsKICAgICAgICAgICAgY2xhc3M6ICJhdmF0YXItdXBsb2FkZXIiLAogICAgICAgICAgICBsYWJlbDogIuaPj+i/sCIsCiAgICAgICAgICAgIGFjdGlvbjogIiIsCiAgICAgICAgICAgIHJlZjogInVwbG9hZCIsCiAgICAgICAgICAgICJiZWZvcmUtdXBsb2FkIjogJG9wdGlvbnMuZm5CZWZvcmVVcGxvYWQsCiAgICAgICAgICAgICJodHRwLXJlcXVlc3QiOiAkb3B0aW9ucy5mblVwbG9hZFJlcXVlc3QsCiAgICAgICAgICAgICJzaG93LWZpbGUtbGlzdCI6IGZhbHNlCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICByZXR1cm4gWyRkYXRhLmltYWdlVXJsID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiaW1nIiwgewogICAgICAgICAgICAgICAga2V5OiAwLAogICAgICAgICAgICAgICAgc3JjOiAkZGF0YS5pbWFnZVVybCwKICAgICAgICAgICAgICAgIGNsYXNzOiAiYXZhdGFyIgogICAgICAgICAgICAgIH0sIG51bGwsIDgKICAgICAgICAgICAgICAvKiBQUk9QUyAqLwogICAgICAgICAgICAgICwgX2hvaXN0ZWRfMykpIDogKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiaSIsIF9ob2lzdGVkXzQpKSwgX2hvaXN0ZWRfNV07CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfOiAxCiAgICAgICAgICAgIC8qIFNUQUJMRSAqLwoKICAgICAgICAgIH0sIDgKICAgICAgICAgIC8qIFBST1BTICovCiAgICAgICAgICAsIFsiYmVmb3JlLXVwbG9hZCIsICJodHRwLXJlcXVlc3QiXSldOwogICAgICAgIH0pLAogICAgICAgIF86IDEKICAgICAgICAvKiBTVEFCTEUgKi8KCiAgICAgIH0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9lbF9mb3JtX2l0ZW0sIG51bGwsIHsKICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2VsX2J1dHRvbiwgewogICAgICAgICAgICB0eXBlOiAicHJpbWFyeSIsCiAgICAgICAgICAgIG9uQ2xpY2s6ICRvcHRpb25zLm9uU3VibWl0CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICByZXR1cm4gW19ob2lzdGVkXzZdOwogICAgICAgICAgICB9KSwKICAgICAgICAgICAgXzogMQogICAgICAgICAgICAvKiBTVEFCTEUgKi8KCiAgICAgICAgICB9LCA4CiAgICAgICAgICAvKiBQUk9QUyAqLwogICAgICAgICAgLCBbIm9uQ2xpY2siXSldOwogICAgICAgIH0pLAogICAgICAgIF86IDEKICAgICAgICAvKiBTVEFCTEUgKi8KCiAgICAgIH0pXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJtb2RlbCJdKV0pOwp9"},{"version":3,"sources":["/Users/x/GolandProjects/giligili-vue/src/views/PostVideo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"post-video\">\n    <h2>欢迎投稿：</h2>\n    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n      <el-form-item label=\"标题\">\n        <el-input v-model=\"form.title\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"视频地址\">\n        <el-input type=\"url\" v-model=\"form.url\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"描述\">\n        <el-input type=\"textarea\" v-model=\"form.info\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"视频封面\">\n        <el-upload\n          class=\"avatar-uploader\"\n          label=\"描述\"\n          action=\"\"\n          ref=\"upload\"\n          :before-upload=\"fnBeforeUpload\"\n          :http-request=\"fnUploadRequest\"\n          :show-file-list=\"false\">\n          <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          <div class=\"el-upload__tip\" v_slot=\"tip\">只能上传png文件，且不超过500kb</div>\n        </el-upload>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onSubmit\">立即创建</el-button>\n      </el-form-item>\n\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport * as API from '@/api/video/';\nimport uplpadAPI from '@/api/upload/';\n\nexport default {\n  name: 'PostVideo',\n  data() {\n    return {\n      imageUrl: '',\n      dialogImageUrl: '',\n      dialogVisible: false,\n      form: {\n        title: '',\n        info: '',\n        url: '',\n        avatar: '',\n      },\n    };\n  },\n  methods: {\n    fnBeforeUpload(file) {\n      const isImage = (file.type === 'image/png' || file.type === 'image/jpeg');\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        this.$message.error('上传头像图片只能是图片!');\n      }\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n      return isImage && isLt2M;\n    },\n    fnUploadRequest(option) {\n      uplpadAPI(option.file.name).then((res) => {\n        const oReq = new XMLHttpRequest();\n        oReq.open('PUT', res.data.put, true);\n        oReq.send(option.file);\n        oReq.onload = () => {\n          this.imageUrl = res.data.get;\n          this.form.avatar = res.data.key;\n        };\n      }).catch((error) => {\n        this.$notify.error({\n          title: '网路错误，或者服务器宕机',\n          message: error,\n        });\n      });\n    },\n    onSubmit() {\n      API.postVideo(this.form).then((res) => {\n        if (res.status > 0) {\n          this.$notify.error({\n            title: '投稿失败',\n            message: res.msg,\n          });\n        } else {\n          this.$notify({\n            title: '投稿成功',\n            message: `您投稿的ID为${res.data.id}`,\n            type: 'success',\n          });\n        }\n      }).catch((error) => {\n        this.$notify.error({\n          title: '网路错误，或者服务器宕机',\n          message: error,\n        });\n      });\n    },\n  },\n  components: {\n  },\n};\n</script>\n\n<style>\n  .avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n  }\n  .avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n  }\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n  }\n  .avatar {\n    max-width: 178px;\n    max-height: 178px;\n    display: block;\n  }\n</style>\n"],"sourceRoot":""}]}