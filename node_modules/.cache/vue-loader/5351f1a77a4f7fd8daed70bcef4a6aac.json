{"remainingRequest":"/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/x/GolandProjects/giligili-vue/src/views/ShowVideo.vue?vue&type=style&index=0&id=06b8223c&lang=css","dependencies":[{"path":"/Users/x/GolandProjects/giligili-vue/src/views/ShowVideo.vue","mtime":1636540563604},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/css-loader/dist/cjs.js","mtime":1636518053256},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1636518055253},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/postcss-loader/src/index.js","mtime":1636518053862},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js","mtime":1636518052017},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/index.js","mtime":1636518053861}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci52aWRlby1oZWFkZXIgewogIG1hcmdpbi1ib3R0b206IDE2cHg7Cn0KLnZpZGVvLWhlYWRlciBoMnsKICBtYXJnaW4tYm90dG9tOiAwcHg7CiAgZm9udC1zaXplOiAxOHB4OwogIGZvbnQtd2VpZ2h0OiA1MDA7CiAgY29sb3I6ICMyMTIxMjE7CiAgbGluZS1oZWlnaHQ6IDI2cHg7CiAgaGVpZ2h0OiAyNnB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKfQoudmlkZW8tZGF0YSB7CiAgbWFyZ2luLXRvcDogNnB4OwogIGZvbnQtc2l6ZTogMTJweDsKICBjb2xvcjogIzk5OTsKfQoudmlkZW8taW5mbyB7CiAgY29sb3I6ICMxMTE7Cn0K"},{"version":3,"sources":["/Users/x/GolandProjects/giligili-vue/src/views/ShowVideo.vue"],"names":[],"mappings":";AA2DA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"/Users/x/GolandProjects/giligili-vue/src/views/ShowVideo.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"post-video\">\n    <div class=\"video-header\">\n      <h2>{{video.title}}</h2>\n      <div class=\"video-data\">\n        <!-- {{video.created_at | moment(\"YYYY-MM-DD h:mm:ss\") }}创建 · -->\n        <!-- 在 3.x 中，过滤器已移除，且不再支持。取而代之的是，我们建议用方法调用或计算属性来替换它们。 -->\n        {{ $filters.video.created_at.moment(\"YYYY-MM-DD h:mm:ss\") }}创建 ·\n        {{video.view}}观赏\n      </div>\n    </div>\n    <video-player\n      class=\"video-player-box\"\n      :options=\"playerOptions\">\n    </video-player>\n    <div class=\"video-info\">\n      <pre>{{video.info}}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'video.js/dist/video-js.css';\nimport { videoPlayer } from 'vue-video-player';\nimport * as API from '@/api/video/';\n\nexport default {\n  name: 'ShowVideo',\n  data() {\n    return {\n      video: {},\n      playerOptions: {\n        fluid: true,\n        autoplay: false,\n        sources: [{\n          type: 'video/mp4',\n          src: '',\n        }],\n      },\n    };\n  },\n  methods: {\n    load() {\n      API.getVideo(this.$route.params.videoID).then((res) => {\n        this.video = res.data;\n        this.playerOptions.sources[0].src = this.video.url;\n      });\n    },\n  },\n  components: {\n    videoPlayer,\n  },\n  beforeMount() {\n    this.load();\n  },\n};\n</script>\n\n<style>\n.video-header {\n  margin-bottom: 16px;\n}\n.video-header h2{\n  margin-bottom: 0px;\n  font-size: 18px;\n  font-weight: 500;\n  color: #212121;\n  line-height: 26px;\n  height: 26px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.video-data {\n  margin-top: 6px;\n  font-size: 12px;\n  color: #999;\n}\n.video-info {\n  color: #111;\n}\n</style>\n"]}]}