{"remainingRequest":"/Users/x/GolandProjects/giligili-vue/node_modules/thread-loader/dist/cjs.js!/Users/x/GolandProjects/giligili-vue/node_modules/babel-loader/lib/index.js!/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/x/GolandProjects/giligili-vue/src/views/ShowVideo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/x/GolandProjects/giligili-vue/src/views/ShowVideo.vue","mtime":1636540563604},{"path":"/Users/x/GolandProjects/giligili-vue/babel.config.js","mtime":1636518206713},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js","mtime":1636518052017},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/thread-loader/dist/cjs.js","mtime":1636518052018},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/babel-loader/lib/index.js","mtime":1636518053895},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/cache-loader/dist/cjs.js","mtime":1636518052017},{"path":"/Users/x/GolandProjects/giligili-vue/node_modules/vue-loader-v16/dist/index.js","mtime":1636518053861}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICd2aWRlby5qcy9kaXN0L3ZpZGVvLWpzLmNzcyc7CmltcG9ydCB7IHZpZGVvUGxheWVyIH0gZnJvbSAndnVlLXZpZGVvLXBsYXllcic7CmltcG9ydCAqIGFzIEFQSSBmcm9tICdAL2FwaS92aWRlby8nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Nob3dWaWRlbycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpZGVvOiB7fSwKICAgICAgcGxheWVyT3B0aW9uczogewogICAgICAgIGZsdWlkOiB0cnVlLAogICAgICAgIGF1dG9wbGF5OiBmYWxzZSwKICAgICAgICBzb3VyY2VzOiBbewogICAgICAgICAgdHlwZTogJ3ZpZGVvL21wNCcsCiAgICAgICAgICBzcmM6ICcnCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWQ6IGZ1bmN0aW9uIGxvYWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBBUEkuZ2V0VmlkZW8odGhpcy4kcm91dGUucGFyYW1zLnZpZGVvSUQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnZpZGVvID0gcmVzLmRhdGE7CiAgICAgICAgX3RoaXMucGxheWVyT3B0aW9ucy5zb3VyY2VzWzBdLnNyYyA9IF90aGlzLnZpZGVvLnVybDsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICB2aWRlb1BsYXllcjogdmlkZW9QbGF5ZXIKICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMubG9hZCgpOwogIH0KfTs="},{"version":3,"sources":["/Users/x/GolandProjects/giligili-vue/src/views/ShowVideo.vue"],"names":[],"mappings":"AAsBA,OAAO,4BAAP;AACA,SAAS,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAK,GAAZ,MAAqB,cAArB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,KAAK,EAAE,EADF;AAEL,MAAA,aAAa,EAAE;AACb,QAAA,KAAK,EAAE,IADM;AAEb,QAAA,QAAQ,EAAE,KAFG;AAGb,QAAA,OAAO,EAAE,CAAC;AACR,UAAA,IAAI,EAAE,WADE;AAER,UAAA,GAAG,EAAE;AAFG,SAAD;AAHI;AAFV,KAAP;AAWD,GAdY;AAeb,EAAA,OAAO,EAAE;AACP,IAAA,IADO,kBACA;AAAA;;AACL,MAAA,GAAG,CAAC,QAAJ,CAAa,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAhC,EAAyC,IAAzC,CAA8C,UAAC,GAAD,EAAS;AACrD,QAAA,KAAI,CAAC,KAAL,GAAa,GAAG,CAAC,IAAjB;AACA,QAAA,KAAI,CAAC,aAAL,CAAmB,OAAnB,CAA2B,CAA3B,EAA8B,GAA9B,GAAoC,KAAI,CAAC,KAAL,CAAW,GAA/C;AACD,OAHD;AAID;AANM,GAfI;AAuBb,EAAA,UAAU,EAAE;AACV,IAAA,WAAW,EAAX;AADU,GAvBC;AA0Bb,EAAA,WA1Ba,yBA0BC;AACZ,SAAK,IAAL;AACD;AA5BY,CAAf","sourcesContent":["<template>\n  <div class=\"post-video\">\n    <div class=\"video-header\">\n      <h2>{{video.title}}</h2>\n      <div class=\"video-data\">\n        <!-- {{video.created_at | moment(\"YYYY-MM-DD h:mm:ss\") }}创建 · -->\n        <!-- 在 3.x 中，过滤器已移除，且不再支持。取而代之的是，我们建议用方法调用或计算属性来替换它们。 -->\n        {{ $filters.video.created_at.moment(\"YYYY-MM-DD h:mm:ss\") }}创建 ·\n        {{video.view}}观赏\n      </div>\n    </div>\n    <video-player\n      class=\"video-player-box\"\n      :options=\"playerOptions\">\n    </video-player>\n    <div class=\"video-info\">\n      <pre>{{video.info}}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'video.js/dist/video-js.css';\nimport { videoPlayer } from 'vue-video-player';\nimport * as API from '@/api/video/';\n\nexport default {\n  name: 'ShowVideo',\n  data() {\n    return {\n      video: {},\n      playerOptions: {\n        fluid: true,\n        autoplay: false,\n        sources: [{\n          type: 'video/mp4',\n          src: '',\n        }],\n      },\n    };\n  },\n  methods: {\n    load() {\n      API.getVideo(this.$route.params.videoID).then((res) => {\n        this.video = res.data;\n        this.playerOptions.sources[0].src = this.video.url;\n      });\n    },\n  },\n  components: {\n    videoPlayer,\n  },\n  beforeMount() {\n    this.load();\n  },\n};\n</script>\n\n<style>\n.video-header {\n  margin-bottom: 16px;\n}\n.video-header h2{\n  margin-bottom: 0px;\n  font-size: 18px;\n  font-weight: 500;\n  color: #212121;\n  line-height: 26px;\n  height: 26px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.video-data {\n  margin-top: 6px;\n  font-size: 12px;\n  color: #999;\n}\n.video-info {\n  color: #111;\n}\n</style>\n"],"sourceRoot":""}]}